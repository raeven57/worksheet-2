# -*- coding: utf-8 -*-
"""Copy of Copy of Raeven 2nd worksheet

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NR5dTui8MWbgbkLsYnoDY__UCfLm42ca
"""

#--------------------------------
# 1.1: While Loop (print 1 to 12) 
#--------------------------------
i = 1 #initialize
while i <= 12: #condition
    print (i) #display
    i = i + 1 # loop

#--------------------------------
# 1.2: While Loop (print 14 to 1)
#--------------------------------
i = 14 # initialize
while i > 0: #condition
    print (i) #display
    i = i - 1 #loop

#---------------------
# 2.3: Range Function
#---------------------
print ("range(10)        -->", list(range(7)))
print ("range(0,20)      -->", list(range(0,7)))
print ("range(10,20)     -->", list(range(6,10)))
print ("range(0,20,2)    -->", list(range(0,20,18))) 
print ("range(-10,-20,-2)-->", list(range(-10,-16,-5)))

#---------------------------------------------------
# 3.2: For loop (print 0 to 12 with increment of 2)
#---------------------------------------------------
for i in range(0,12,2):
    print (i)

#-------------------------------
# 3.4: For loop (print 0 to -6)
#-------------------------------
for i in range(0,-6,-1):
    print (i)

#------------------------
# 3.5: Print table of 24
#------------------------
for i in range(1,11):
    print (24,"*", i , "=", i * 24)

#----------------------------------
# 3.6: Sum all numbers from 1 to 56
#----------------------------------
s = 0
for i in range(1,57):
    s = s + i
print ("Sum is --> ",s)

#-----------------------------------
# 3.7: Sum all numbers from 1 to 24
#-----------------------------------
print ("Sum is --> ", sum(range(1,25)))

#-------------------------
# 5.1: Adding two numbers
#-------------------------
def Add(a,b):
    c = a + b
    return c

print ("Add(23,7) -->", Add(23,7))
print ("Add(18,21) -->", Add(18,21)) 
print ("Add(39,30)-->", Add(39,30))

#------------------------
# 5.4: Default Parameter
#------------------------
def Add(a, b, d = 88):
    c = a + b + d
    return c

print ("Add(34,54)   -->", Add(34,54))
print ("Add(23,35,54)-->", Add(23,35,54))

#-----------------
# 6: Math library
#-----------------

import math as m
print ("exp(-300)    -->", m.exp(-300))  # Exponential function
print ("log(20,2)   -->", m.log(20,2))   # Log
print ("log(40,20)  -->", m.log(40,20))  # Log
print ("log10(250)   -->", m.log10(250))# Log 10
print ("m.cos(45)    -->", m.cos(45))    # cos
print ("m.sin(45)    -->", m.sin(45))    # sin
print ("m.tan(45)    -->", m.tan(45))    # tan
print ("m.sqrt(24)  -->", m.sqrt(24))
print ("m.ceil(78.5) -->", m.ceil(78.5))
print ("m.floor(24.8)-->", m.floor(24.8))

#-------------------------
# 7.1: String Declaration
#-------------------------
var1 = 'My dog is cute'
var2 = "My dog is cute"
print ("var1 -->", var1)
print ("var2 -->",var2)

#-------------------------------------------------------
# 7.2: Difference between single quote and double quote
#-------------------------------------------------------
var1 = 'Ohayo "Gin-San"'
var2 = "Ohayo 'Gin-San'"
print ("var1 -->", var1)
print ("var2 -->",var2)

#-------------------------
# 7.3.1: Indexing in string
#-------------------------
var1 = "4238769"
print("var1       -->", var1)
print("var1[1:3]  -->", var1[1:3])
print("var1[2:]   -->", var1[2:])
print("var1[2:5]  -->", var1[2:5])
print("var1[:2]   -->", var1[:2])
print("var1[:-1]  -->", var1[:-1])
print("var1[-4:-1]-->", var1[-4:-1])

#-------------------------
# 7.3.2: Indexing in string
#-------------------------
var1 = "8923478"
print("var1      -->", var1)
print("var1[::1] -->", var1[::1])        # No change
print("var1[::-1]-->", var1[::-1])       # Reverse
print("var1[::-2]-->", var1[::-2])
print("var1[::2] -->", var1[::2])

#----------------------------------
# 7.4: String length, upper, lower
#----------------------------------
var1 = "I love cats"

print ("var1           --> ", var1)
print ("\nlength of var1 --> ", len(var1))

print ("\nUpper of var1  --> ", var1.upper())     # No change in the var1 variable
print ("var1           --> ", var1)

print ("\nLower of var1  --> ", var1.lower())
print ("var1           --> ", var1)

#-------------------------
# 7.6: String formatting
#-------------------------
name  = "Payal"    #=input("Enter your name: ")"
age   = 18           #=int(input("Enter your age: "))
price = 248         #=float(input("Enter the book price: "))
s = "My name is %s, my age is %d and the book price is %f" %(name.upper(),age,price)
print (s)

#---------------------------------------------------------------------------------
# 7.8: String strip - Remove white Spaces (space, new line, tab) from either side
#---------------------------------------------------------------------------------
s1 = " My rabbit is mean "
s2 = " My    rabbit    is     mean   "
s3 = "My,rabbit,is,mean"

print ("s1       --> ", s1, "\t\t   Length --> ", len(s1))
print ("s1 strip --> ", s1.strip(), "\t\t   Length --> ", len(s1.strip()))
 
print ("\ns2       --> ", s2, "\t   Length --> ", len(s2))
print ("s2 strip --> ", s2.strip(), "\t\t   Length --> ", len(s2.strip()))

print ("\ns3       --> ", s3, "\t   Length --> ", len(s3))
print ("s3 strip --> ", s3.strip(), "\t   Length --> ", len(s3.strip()))

#------------------------
# 7.11: Reverse a String
#------------------------
s1 = "Katsura Kotaro"
print ("s1               -->", s1)
print ("s1[::1]          -->", s1[::1])
print ("s1[::-1]         -->", s1[::-1])
print ("s1[::-3]         -->", s1[::-3])
print ("s1[::4]          -->", s1[::4])

s1 = s1[::-1]
print ("s1 after reverse -->", s1)

#------------------
# 7.12: Palindrome
#-----------------
s1 = "he lived as a devil eh"
s2 = "Italian"
s3 = "elle"
s4 = "zayn"
print ("s1 -->", s1 == s1[::-1])
print ("s2 -->", s2 == s2[::-1])
print ("s3 -->", s3 == s3[::-1])
print ("s4 -->", s4 == s4[::-1])

#----------------------------------------------
#Assingment 3.1.1: WAP to print the table of 7.
#----------------------------------------------
for i in range(1,11):
    print (7,"*", i , "=", i * 7)

#----------------------------------------------
#Assingment 3.1.2: WAP to print the table of 9.
#----------------------------------------------
for i in range(1,11):
    print (9,"*", i , "=", i * 9)

#--------------------------------------------------------------------
#Assingment 3.2: WAP to print the table of n and n is given by user.
#--------------------------------------------------------------------
n=int(input("Enter the number:"))
for i in range(1,11):
    print (n,"*", i ,"=", n * i)

#------------------------------------------------------------------------------
#Assingment 3.3: WAP to add all the numbers from 1 to n and n is given by user.
#------------------------------------------------------------------------------

n=int(input("Enter the number:"))
print ("Sum is --> ", sum(range(1,n)))

#-----------------------------------------------------------------------------------------
#Assingment 5.1: WAP using function that add all odd numbers from 1 to n; n is given by user.
#-----------------------------------------------------------------------------------------

n = int(input("Enter the number : "))
sum = 0;

for i in range(1, n + 1):

    #Check for odd or not.
    if(not (i % 2) == 0):
        sum += i;

print ("\nSum of odd numbers from 1 to", n, "is :", sum)

#-----------------------------------------------------------------------------------------
#Assingment 5.2: WAP using function that add all even numbers from 1 to n; n is given by user.
#-----------------------------------------------------------------------------------------

n = int(input("Enter the number: "))

total = 0

for i in range(1, n + 1):

    # Check for even or not.
    if((i % 2) == 0):
        total = total + i

print ("Sum of even numbers from 1 to", n, "is :", total)

#-----------------------------------------------------------------------------------------
#Assingment 5.3: WAP using function that add all prime numbers from 1 to n; n is given by user.
#-----------------------------------------------------------------------------------------

n = int(input("Enter the number: "))
sum = 0

for num in range(2, n + 1):

    i = 2
    for i in range(2, num):
        if (int(num % i) == 0):
            i = num
            break;
            
    if i is not num:
        sum = sum + num
print ("The sum of prime numbers from 1 to ", n, " is :", sum)